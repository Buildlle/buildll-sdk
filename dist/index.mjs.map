{"version":3,"sources":["../src/provider/BuildllProvider.tsx","../src/client.ts","../src/hooks/useContent.ts","../src/components/Text.tsx","../src/components/Image.tsx","../src/components/RichText.tsx","../src/components/manual/EditableText.tsx","../src/components/manual/EditableImage.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect } from 'react';\nimport { buildllClient, BuildllClient } from '../client';\n\nconst BuildllContext = createContext<{ client: BuildllClient; siteId: string } | null>(null);\n\nexport interface BuildllProviderProps {\n  siteId: string;\n  publicApiKey?: string;\n  baseUrl?: string;\n  children: React.ReactNode;\n}\n\n/**\n * BuildllProvider - Production-only content provider\n *\n * Provides content fetching capabilities to Buildll components.\n * NO editing functionality - purely for content display.\n * Editing happens only in Buildll Dashboard.\n */\nexport function BuildllProvider({\n  siteId,\n  publicApiKey,\n  baseUrl,\n  children,\n}: BuildllProviderProps) {\n  const client = buildllClient({ siteId, publicApiKey, baseUrl });\n\n  // Check if we're in editor mode and inject editor script\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const isEditorMode = urlParams.get('buildll_editor') === 'true';\n\n    if (isEditorMode) {\n      // Inject the editor script inline to avoid CORS issues\n      const script = document.createElement('script');\n      script.textContent = `\n        /**\n         * Buildll Editor Script - Inline Version\n         * Makes elements with data-buildll-* attributes clickable for editing.\n         */\n        (function() {\n          'use strict';\n\n          let isEditorEnabled = false;\n          let hoveredElement = null;\n\n          // Check if we're in editor mode\n          const urlParams = new URLSearchParams(window.location.search);\n          const isEditorMode = urlParams.get('buildll_editor') === 'true';\n\n          if (!isEditorMode) {\n            return; // Exit if not in editor mode\n          }\n\n          // Initialize editor when parent sends init message\n          window.addEventListener('message', function(event) {\n            const { type, data } = event.data;\n\n            switch (type) {\n              case 'BUILDLL_INIT_EDITOR':\n                initializeEditor(data);\n                break;\n\n              case 'BUILDLL_CONTENT_UPDATED':\n                updateElementContent(data);\n                break;\n            }\n          });\n\n          function initializeEditor(config) {\n            isEditorEnabled = true;\n\n            // Add visual indicators for editable elements\n            addEditorStyles();\n\n            // Make elements clickable\n            setupElementInteractions();\n\n            // Notify parent that editor is ready\n            notifyParent('BUILDLL_READY');\n\n            console.log('Buildll Editor initialized (inline)');\n          }\n\n          function addEditorStyles() {\n            const style = document.createElement('style');\n            style.textContent = \\`\n              [data-buildll-id] {\n                position: relative;\n                cursor: pointer !important;\n                transition: all 0.2s ease;\n              }\n\n              [data-buildll-id]:hover {\n                background-color: rgba(59, 130, 246, 0.1) !important;\n                outline: 2px solid rgba(59, 130, 246, 0.5) !important;\n                outline-offset: 2px;\n              }\n\n              [data-buildll-id]:hover::after {\n                content: 'Click to edit';\n                position: absolute;\n                top: -30px;\n                left: 0;\n                background: rgba(59, 130, 246, 0.9);\n                color: white;\n                padding: 4px 8px;\n                border-radius: 4px;\n                font-size: 12px;\n                font-family: system-ui, sans-serif;\n                white-space: nowrap;\n                z-index: 10000;\n                pointer-events: none;\n              }\n\n              .buildll-editing {\n                background-color: rgba(34, 197, 94, 0.1) !important;\n                outline: 2px solid rgba(34, 197, 94, 0.8) !important;\n              }\n            \\`;\n            document.head.appendChild(style);\n          }\n\n          function setupElementInteractions() {\n            // Find all editable elements\n            const editableElements = document.querySelectorAll('[data-buildll-id]');\n\n            editableElements.forEach(element => {\n              // Click handler\n              element.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const buildllId = element.getAttribute('data-buildll-id');\n                const buildllText = element.getAttribute('data-buildll-text');\n                const buildllType = element.getAttribute('data-buildll-type') || 'text';\n\n                // Get element rectangle for positioning\n                const rect = element.getBoundingClientRect();\n\n                // Highlight the editing element\n                clearEditingHighlights();\n                element.classList.add('buildll-editing');\n\n                // Notify parent of element click\n                notifyParent('BUILDLL_ELEMENT_CLICKED', {\n                  id: buildllId,\n                  elementType: buildllType,\n                  text: buildllText || element.textContent?.trim() || '',\n                  rect: {\n                    top: rect.top,\n                    left: rect.left,\n                    width: rect.width,\n                    height: rect.height\n                  }\n                });\n              });\n\n              // Hover handlers\n              element.addEventListener('mouseenter', function(e) {\n                hoveredElement = element;\n                notifyParent('BUILDLL_ELEMENT_HOVER', {\n                  id: element.getAttribute('data-buildll-id'),\n                  entering: true\n                });\n              });\n\n              element.addEventListener('mouseleave', function(e) {\n                hoveredElement = null;\n                notifyParent('BUILDLL_ELEMENT_HOVER', {\n                  id: element.getAttribute('data-buildll-id'),\n                  entering: false\n                });\n              });\n            });\n\n            // Prevent default link behavior in editor mode\n            document.addEventListener('click', function(e) {\n              if (e.target.closest('a[href]') && isEditorEnabled) {\n                e.preventDefault();\n              }\n            });\n          }\n\n          function updateElementContent(data) {\n            const { id, text } = data;\n            const element = document.querySelector(\\`[data-buildll-id=\"\\${id}\"]\\`);\n\n            if (element) {\n              // Find the Text component child and update it\n              const textElement = element.querySelector('span, div');\n              if (textElement) {\n                textElement.textContent = text;\n              } else {\n                element.textContent = text;\n              }\n\n              // Update the data attribute\n              element.setAttribute('data-buildll-text', text);\n\n              // Clear editing highlight\n              element.classList.remove('buildll-editing');\n\n              console.log(\\`Updated content for \\${id}:\\`, text);\n            }\n          }\n\n          function clearEditingHighlights() {\n            const editingElements = document.querySelectorAll('.buildll-editing');\n            editingElements.forEach(el => el.classList.remove('buildll-editing'));\n          }\n\n          function notifyParent(type, data = null) {\n            window.parent.postMessage({ type, data }, '*');\n          }\n\n          // Auto-inject if the script is loaded directly\n          if (isEditorMode) {\n            // Wait for DOM to be ready\n            if (document.readyState === 'loading') {\n              document.addEventListener('DOMContentLoaded', function() {\n                setTimeout(() => {\n                  initializeEditor({ siteId: urlParams.get('siteId') });\n                }, 100);\n              });\n            } else {\n              setTimeout(() => {\n                initializeEditor({ siteId: urlParams.get('siteId') });\n              }, 100);\n            }\n          }\n        })();\n      `;\n      document.head.appendChild(script);\n      console.log('Buildll editor script injected inline');\n\n      return () => {\n        // Cleanup if needed\n        if (document.head.contains(script)) {\n          document.head.removeChild(script);\n        }\n      };\n    }\n\n    return () => {\n      // No cleanup needed if not in editor mode\n    };\n  }, []);\n\n  return (\n    <BuildllContext.Provider value={{ client, siteId }}>\n      {children}\n    </BuildllContext.Provider>\n  );\n}\n\nexport function useBuildll() {\n  const ctx = useContext(BuildllContext);\n  if (!ctx) throw new Error('useBuildll must be used inside BuildllProvider');\n  return ctx;\n}","import type { BuildllClientOptions, ContentResponse } from './types';\n\nexport class BuildllClient {\n  baseUrl: string;\n  siteId: string;\n  publicApiKey?: string;\n  serverApiKey?: string;\n  private cache: Map<string, { data: any; timestamp: number }> = new Map();\n  private readonly CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n\n  constructor(opts: BuildllClientOptions) {\n    this.baseUrl = typeof window !== 'undefined' ? '/api' : (opts.baseUrl ?? 'https://api.buildll.com');\n    console.log('BuildllClient baseUrl:', this.baseUrl);\n    this.siteId = opts.siteId;\n    this.publicApiKey = opts.publicApiKey;\n    this.serverApiKey = opts.serverApiKey;\n  }\n\n  private getCacheKey(key: string): string {\n    return `${this.siteId}:${key}`;\n  }\n\n  private getCachedData<T>(key: string): T | null {\n    const cacheKey = this.getCacheKey(key);\n    const cached = this.cache.get(cacheKey);\n\n    if (!cached) return null;\n\n    const isExpired = Date.now() - cached.timestamp > this.CACHE_TTL;\n    if (isExpired) {\n      this.cache.delete(cacheKey);\n      return null;\n    }\n\n    return cached.data;\n  }\n\n  private setCachedData<T>(key: string, data: T): void {\n    const cacheKey = this.getCacheKey(key);\n    this.cache.set(cacheKey, {\n      data,\n      timestamp: Date.now()\n    });\n  }\n\n  private invalidateCache(key?: string): void {\n    if (key) {\n      const cacheKey = this.getCacheKey(key);\n      this.cache.delete(cacheKey);\n    } else {\n      // Clear all cache for this siteId\n      const sitePrefix = `${this.siteId}:`;\n      for (const [cacheKey] of this.cache) {\n        if (cacheKey.startsWith(sitePrefix)) {\n          this.cache.delete(cacheKey);\n        }\n      }\n    }\n  }\n\n  async getContent<T = unknown>(sectionId: string): Promise<ContentResponse<T> | null> {\n    // Check cache first\n    const cached = this.getCachedData<ContentResponse<T> | null>(`content:${sectionId}`);\n    if (cached !== null) {\n      return cached;\n    }\n\n    const url = `${this.baseUrl}/projects/${this.siteId}/content/${sectionId}`;\n    const res = await fetch(url, {\n      headers: { 'Accept': 'application/json', 'x-buildll-key': this.publicApiKey ?? ''},\n    });\n    if (res.status === 404) {\n      this.setCachedData(`content:${sectionId}`, null);\n      return null;\n    }\n    if (!res.ok) throw new Error(`Failed to fetch content: ${res.status}`);\n\n    const result = await res.json();\n    this.setCachedData(`content:${sectionId}`, result);\n    return result;\n  }\n\n  async getBatchContent<T = unknown>(sectionIds: string[]): Promise<Record<string, ContentResponse<T> | null>> {\n    // Create a batch cache key\n    const batchKey = `batch:${sectionIds.sort().join(',')}`;\n    const cached = this.getCachedData<Record<string, ContentResponse<T> | null>>(batchKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Check individual caches first to avoid unnecessary API calls\n    const result: Record<string, ContentResponse<T> | null> = {};\n    const uncachedIds: string[] = [];\n\n    for (const sectionId of sectionIds) {\n      const cachedItem = this.getCachedData<ContentResponse<T> | null>(`content:${sectionId}`);\n      if (cachedItem !== null) {\n        result[sectionId] = cachedItem;\n      } else {\n        uncachedIds.push(sectionId);\n      }\n    }\n\n    // If all items are cached, return immediately\n    if (uncachedIds.length === 0) {\n      return result;\n    }\n\n    // Fetch only uncached items\n    const url = `${this.baseUrl}/projects/${this.siteId}/content/batch`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-buildll-key': this.publicApiKey ?? ''\n      },\n      body: JSON.stringify({ sectionIds: uncachedIds }),\n    });\n    if (!res.ok) throw new Error(`Failed to fetch batch content: ${res.status}`);\n\n    const data = await res.json();\n\n    // Cache individual results and merge with existing results\n    data.results.forEach((item: { sectionId: string; content: ContentResponse<T> | null }) => {\n      this.setCachedData(`content:${item.sectionId}`, item.content);\n      result[item.sectionId] = item.content;\n    });\n\n    // Cache the entire batch result\n    this.setCachedData(batchKey, result);\n\n    return result;\n  }\n\n  // server-side method with serverApiKey\n  async getContentServer<T = unknown>(sectionId: string): Promise<ContentResponse<T> | null> {\n    if (!this.serverApiKey) throw new Error('serverApiKey required for getContentServer');\n    const url = `${this.baseUrl}/projects/${this.siteId}/content/${sectionId}`;\n    const res = await fetch(url, {\n      headers: { 'Accept': 'application/json', 'Authorization': `Bearer ${this.serverApiKey}` },\n    });\n    if (res.status === 404) return null;\n    if (!res.ok) throw new Error(`Failed to fetch content: ${res.status}`);\n    return res.json();\n  }\n\n  async updateContent<T = unknown>(sectionId: string, patch: Partial<T>, writeToken: string) {\n    const url = `${this.baseUrl}/projects/${this.siteId}/content`;\n    const res = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${writeToken}`,\n      },\n      body: JSON.stringify({ contentId: sectionId, data: patch }),\n    });\n    if (!res.ok) {\n      const text = await res.text();\n      throw new Error(`Failed to update content: ${res.status} ${text}`);\n    }\n\n    // Invalidate cache for this section and all batch caches\n    this.invalidateCache(`content:${sectionId}`);\n    // Clear all batch caches as they may contain this section\n    this.invalidateCache();\n\n    return res.json();\n  }\n\n  async updateBatchContent<T = unknown>(\n    updates: Array<{ contentId: string; data: Partial<T> }>,\n    writeToken: string\n  ) {\n    const url = `${this.baseUrl}/projects/${this.siteId}/content/batch-update`;\n    const res = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${writeToken}`,\n      },\n      body: JSON.stringify({ updates }),\n    });\n    if (!res.ok) {\n      const text = await res.text();\n      throw new Error(`Failed to update batch content: ${res.status} ${text}`);\n    }\n\n    // Invalidate cache for all updated sections\n    updates.forEach(({ contentId }) => {\n      this.invalidateCache(`content:${contentId}`);\n    });\n    // Clear all batch caches\n    this.invalidateCache();\n\n    return res.json();\n  }\n}\n\n// small factory\nexport function buildllClient(opts: BuildllClientOptions) {\n  return new BuildllClient(opts);\n}\n","import { useEffect, useState } from 'react';\nimport { useBuildll } from '../provider/BuildllProvider';\nimport type { ContentResponse } from '../types';\n\nfunction mergeDefaults<T>(defaults: T | undefined, fetched: ContentResponse<T> | null): T {\n  if (!fetched) return defaults as T;\n  return { ...(defaults || {}), ...(fetched.data || {}) } as T;\n}\n\n/**\n * useContent - Production-only content hook\n *\n * Fetches and returns content from Buildll CMS.\n * NO editing functionality - purely for content display.\n * Editing happens only in Buildll Dashboard.\n */\nexport function useContent<T = unknown>(\n  sectionId: string,\n  options?: { defaults?: T; revalidate?: boolean }\n) {\n  const { client } = useBuildll();\n  const [data, setData] = useState<T | undefined>(options?.defaults);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState<unknown>(null);\n\n  useEffect(() => {\n    let mounted = true;\n    setLoading(true);\n\n    client.getContent<T>(sectionId)\n      .then((res) => {\n        if (!mounted) return;\n        const merged = mergeDefaults(options?.defaults, res);\n        setData(merged);\n      })\n      .catch((err) => { if (mounted) setError(err); })\n      .finally(() => { if (mounted) setLoading(false); });\n\n    return () => { mounted = false; };\n  }, [client, sectionId, JSON.stringify(options?.defaults)]);\n\n  return { data: (data as T), isLoading, error };\n}\n\n/**\n * useBatchContent - Production-only batch content hook\n *\n * Fetches multiple content sections in a single request.\n * NO editing functionality - purely for content display.\n * Editing happens only in Buildll Dashboard.\n */\nexport function useBatchContent<T = Record<string, unknown>>(\n  sectionIds: string[],\n  options?: { defaults?: T; revalidate?: boolean }\n) {\n  const { client } = useBuildll();\n  const [data, setData] = useState<T | undefined>(options?.defaults);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState<unknown>(null);\n\n  useEffect(() => {\n    if (sectionIds.length === 0) {\n      setLoading(false);\n      return;\n    }\n\n    let mounted = true;\n    setLoading(true);\n\n    client.getBatchContent(sectionIds)\n      .then((batchResults) => {\n        if (!mounted) return;\n\n        const mergedData: Record<string, any> = {};\n\n        sectionIds.forEach((sectionId) => {\n          const result = batchResults[sectionId];\n          const defaultValue = options?.defaults?.[sectionId as keyof T];\n          mergedData[sectionId] = mergeDefaults(defaultValue, result);\n        });\n\n        setData(mergedData as T);\n      })\n      .catch((err) => { if (mounted) setError(err); })\n      .finally(() => { if (mounted) setLoading(false); });\n\n    return () => { mounted = false; };\n  }, [client, JSON.stringify(sectionIds), JSON.stringify(options?.defaults)]);\n\n  return {\n    data: (data as T),\n    isLoading,\n    error\n  };\n}","\nexport interface TextProps {\n  contentId: string;\n  fallback: string;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport function Text({ contentId, fallback, className }: TextProps) {\n  // For now, just return the fallback text\n  // In production, this would fetch from the API\n  return (\n    <span\n      className={className}\n      data-buildll-id={contentId}\n      data-buildll-text={fallback}\n      data-buildll-type=\"text\"\n    >\n      {fallback}\n    </span>\n  );\n}","\nexport interface ImageProps {\n  contentId: string;\n  src: string;\n  alt: string;\n  className?: string;\n  width?: number;\n  height?: number;\n}\n\nexport function Image({ contentId, src, alt, className, width, height }: ImageProps) {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      width={width}\n      height={height}\n      data-buildll-id={contentId}\n      data-buildll-src={src}\n      data-buildll-type=\"image\"\n    />\n  );\n}","\nexport interface RichTextProps {\n  contentId: string;\n  fallback: string;\n  className?: string;\n}\n\nexport function RichText({ contentId, fallback, className }: RichTextProps) {\n  return (\n    <div\n      className={className}\n      data-buildll-id={contentId}\n      data-buildll-text={fallback}\n      data-buildll-type=\"richtext\"\n      dangerouslySetInnerHTML={{ __html: fallback }}\n    />\n  );\n}","export interface EditableTextProps {\n  id: string;\n  children: React.ReactNode;\n  className?: string;\n  as?: React.ElementType;\n}\n\n/**\n * Manual EditableText component for when the Babel plugin fails\n * This provides a fallback for zero-boilerplate editing\n */\nexport function EditableText({\n  id,\n  children,\n  className,\n  as: Component = 'span'\n}: EditableTextProps) {\n  const textContent = typeof children === 'string' ? children : '';\n\n  return (\n    <Component\n      className={className}\n      data-buildll-id={id}\n      data-buildll-text={textContent}\n      data-buildll-type=\"text\"\n    >\n      {children}\n    </Component>\n  );\n}","\nexport interface EditableImageProps {\n  id: string;\n  src: string;\n  alt: string;\n  className?: string;\n  width?: number;\n  height?: number;\n}\n\n/**\n * Manual EditableImage component for when the Babel plugin fails\n */\nexport function EditableImage({\n  id,\n  src,\n  alt,\n  className,\n  width,\n  height\n}: EditableImageProps) {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      width={width}\n      height={height}\n      data-buildll-id={id}\n      data-buildll-src={src}\n      data-buildll-type=\"image\"\n    />\n  );\n}"],"mappings":"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","names":["useEffect","useEffect","jsx","jsx","jsx","jsx","jsx"]}